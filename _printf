#include <stdarg.h>
#include <unistd.h>

/**
* _printf - Custom function that mimics printf for printing text
* @format: The format string containing text and format specifiers
*
* Return: The number of characters printed
*/
int _printf(const char *format, ...)
{
va_list args;
int count = 0;
char *str;

if (!format)
return (-1);

va_start(args, format);

while (*format)
{
if (*format == '%')
{
format++;
if (*format == 'c')
{
char c = va_arg(args, int);
write(1, &c, 1);
count++;
}
else if (*format == 's')
{
str = va_arg(args, char *);
if (!str)
str = "(null)";
while (*str)
{
write(1, str, 1);
str++;
count++;
}
}
else if (*format == '%')
{
write(1, "%", 1);
count++;
}
else
{
write(1, "%", 1);
write(1, format, 1);
count += 2;
}
}
else
{
write(1, format, 1);
count++;
}
format++;
}

va_end(args);
return (count);
}

